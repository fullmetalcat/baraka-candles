plugins {
    id 'com.github.johnrengelman.shadow'
    id 'org.unbroken-dome.test-sets'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.neovisionaries:nv-websocket-client:${nvWebsocketClientVersion}"

    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation("com.sparkjava:spark-core:${sparkJavaVersion}") {
        exclude group: "org.eclipse.jetty"
        exclude group: "org.eclipse.jetty.websocket"
    }
    implementation "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"
    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-webapp:${jettyVersion}"

    testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

}

test {
    useJUnitPlatform()
}

ext {
    mainClassName = 'candles.Application'
    shadowJarVersion = project.findProperty('buildShadowJarVersion') ?: project.version
}

shadowJar {
    zip64 true
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': "${mainClassName}"
    }
    baseName = 'candles'
    version = shadowJarVersion
}

build.dependsOn shadowJar